{
  "address": "0x3Cc4335EbE2bFbf5023e3306BC1d1f7e494c60AF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "Pricefeedadress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_pricefeedadress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb01d5ec0d12e3b670b38858eb2bb0a1f8ac73528b1a9bed3511f7ed467e8f4e3",
  "receipt": {
    "to": null,
    "from": "0xe3712b61905B45fA357876309C14a028a5f1C56E",
    "contractAddress": "0x3Cc4335EbE2bFbf5023e3306BC1d1f7e494c60AF",
    "transactionIndex": 58,
    "gasUsed": "872972",
    "logsBloom": "0x
    "blockHash": "0x92ae003ac394c71849892eb6467231b69dac4077cac9d889a7d59a985cb8b57e",
    "transactionHash": "0xb01d5ec0d12e3b670b38858eb2bb0a1f8ac73528b1a9bed3511f7ed467e8f4e3",
    "logs": [],
    "blockNumber": 8391748,
    "cumulativeGasUsed": "11250005",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "d38d28ad889e8c817c7502a1e0e3ce94",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Pricefeedadress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pricefeedadress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        address pricefeedaddress\\n    ) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            pricefeedaddress\\n        );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        address pricefeedaddress\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(pricefeedaddress);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xab7cbf7ec3653e278aaf29dea91acfab449d384af0219185428021b81182aebe\",\"license\":\"MIT\"},\"contracts/fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    address public _pricefeedadress;\\n    constructor(address Pricefeedadress) {\\n        i_owner = msg.sender;\\n        _pricefeedadress = Pricefeedadress;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(_pricefeedadress) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n   \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\")   ;\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0x112403442b416bab415f723d65b9eff5524b67152c9a4b321cbf38f0d570c725\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f59380380610f598339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e00806101596000396000f3fe6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063d89e94e514610116578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b2565b610525565b6040516100d891906107f8565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906107f8565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61054a565b6040516101389190610822565b60405180910390f35b34801561014d57600080fd5b50610156610570565b6040516101639190610822565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610869565b610596565b6040516101a09190610822565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d590919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906108f3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610942565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610415576000600182815481106103905761038f610998565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d906109c7565b91505061036d565b50600067ffffffffffffffff81111561043157610430610a10565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600190805190602001906104759291906106a8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610a70565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610ad1565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e183610611565b90506000670de0b6b3a764000085836105fa9190610af1565b6106049190610b7a565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610c38565b5050509150506402540be4008161069f9190610cb3565b92505050919050565b828054828255906000526020600020908101928215610721579160200282015b828111156107205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c8565b5b50905061072e9190610732565b5090565b5b8082111561074b576000816000905550600101610733565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077f82610754565b9050919050565b61078f81610774565b811461079a57600080fd5b50565b6000813590506107ac81610786565b92915050565b6000602082840312156107c8576107c761074f565b5b60006107d68482850161079d565b91505092915050565b6000819050919050565b6107f2816107df565b82525050565b600060208201905061080d60008301846107e9565b92915050565b61081c81610774565b82525050565b60006020820190506108376000830184610813565b92915050565b610846816107df565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b60006020828403121561087f5761087e61074f565b5b600061088d84828501610854565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108dd601b83610896565b91506108e8826108a7565b602082019050919050565b6000602082019050818103600083015261090c816108d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094d826107df565b9150610958836107df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098d5761098c610913565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109d2826107df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0557610a04610913565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b83610896565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc826107df565b9150610b07836107df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4057610b3f610913565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b85826107df565b9150610b90836107df565b925082610ba057610b9f610b4b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bca81610bab565b8114610bd557600080fd5b50565b600081519050610be781610bc1565b92915050565b6000819050919050565b610c0081610bed565b8114610c0b57600080fd5b50565b600081519050610c1d81610bf7565b92915050565b600081519050610c328161083d565b92915050565b600080600080600060a08688031215610c5457610c5361074f565b5b6000610c6288828901610bd8565b9550506020610c7388828901610c0e565b9450506040610c8488828901610c23565b9350506060610c9588828901610c23565b9250506080610ca688828901610bd8565b9150509295509295909350565b6000610cbe82610bed565b9150610cc983610bed565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0857610d07610913565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4557610d44610913565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8257610d81610913565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dbf57610dbe610913565b5b82820290509291505056fea26469706673582212207d539cc528d3967846bdf874a8d60138aa11951c3a12f005c03207836a0ac48b64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063d89e94e514610116578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b2565b610525565b6040516100d891906107f8565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906107f8565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61054a565b6040516101389190610822565b60405180910390f35b34801561014d57600080fd5b50610156610570565b6040516101639190610822565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610869565b610596565b6040516101a09190610822565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d590919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906108f3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610942565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610415576000600182815481106103905761038f610998565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d906109c7565b91505061036d565b50600067ffffffffffffffff81111561043157610430610a10565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600190805190602001906104759291906106a8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610a70565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610ad1565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e183610611565b90506000670de0b6b3a764000085836105fa9190610af1565b6106049190610b7a565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190610c38565b5050509150506402540be4008161069f9190610cb3565b92505050919050565b828054828255906000526020600020908101928215610721579160200282015b828111156107205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c8565b5b50905061072e9190610732565b5090565b5b8082111561074b576000816000905550600101610733565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077f82610754565b9050919050565b61078f81610774565b811461079a57600080fd5b50565b6000813590506107ac81610786565b92915050565b6000602082840312156107c8576107c761074f565b5b60006107d68482850161079d565b91505092915050565b6000819050919050565b6107f2816107df565b82525050565b600060208201905061080d60008301846107e9565b92915050565b61081c81610774565b82525050565b60006020820190506108376000830184610813565b92915050565b610846816107df565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b60006020828403121561087f5761087e61074f565b5b600061088d84828501610854565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108dd601b83610896565b91506108e8826108a7565b602082019050919050565b6000602082019050818103600083015261090c816108d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094d826107df565b9150610958836107df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098d5761098c610913565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109d2826107df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0557610a04610913565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abb600b83610896565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc826107df565b9150610b07836107df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4057610b3f610913565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b85826107df565b9150610b90836107df565b925082610ba057610b9f610b4b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bca81610bab565b8114610bd557600080fd5b50565b600081519050610be781610bc1565b92915050565b6000819050919050565b610c0081610bed565b8114610c0b57600080fd5b50565b600081519050610c1d81610bf7565b92915050565b600081519050610c328161083d565b92915050565b600080600080600060a08688031215610c5457610c5361074f565b5b6000610c6288828901610bd8565b9550506020610c7388828901610c0e565b9450506040610c8488828901610c23565b9350506060610c9588828901610c23565b9250506080610ca688828901610bd8565b9150509295509295909350565b6000610cbe82610bed565b9150610cc983610bed565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0857610d07610913565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4557610d44610913565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8257610d81610913565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dbf57610dbe610913565b5b82820290509291505056fea26469706673582212207d539cc528d3967846bdf874a8d60138aa11951c3a12f005c03207836a0ac48b64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/fundme.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 120,
        "contract": "contracts/fundme.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 122,
        "contract": "contracts/fundme.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 131,
        "contract": "contracts/fundme.sol:FundMe",
        "label": "_pricefeedadress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}